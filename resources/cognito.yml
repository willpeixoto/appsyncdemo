#Lets create a user poll to use with our application
CognitoUserPool:
    Type: "AWS::Cognito::UserPool"
    Properties:
        # Generate a name based on the stage
      UserPoolName: ${self:custom.default}-userpool
        # Set email as an alias
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      Schema:
        - Name: name
          AttributeDataType: String
          Mutable: true
          Required: false
        - Name: nickname
          AttributeDataType: String
          Mutable: true
          Required: false

CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      # Generate an app client name based on the stage
      ClientName: ${self:custom.default}-user-pool-client
      UserPoolId:
        Ref: CognitoUserPool
      ExplicitAuthFlows:
        - ADMIN_NO_SRP_AUTH
      GenerateSecret: false

CognitoIdentityPool:
  Type: AWS::Cognito::IdentityPool
  Properties:
    # Generate a name based on the stack-stage
    IdentityPoolName: ${self:custom.default}-IdentityPool
    # Don't allow unathenticated users
    AllowUnauthenticatedIdentities: false
    # Link to our User Pool
    CognitoIdentityProviders:
      - ClientId:
          Ref: CognitoUserPoolClient
        ProviderName:
          Fn::GetAtt: [ "CognitoUserPool", "ProviderName" ]
          
# IAM roles
CognitoIdentityPoolRoles:
  Type: AWS::Cognito::IdentityPoolRoleAttachment
  Properties:
    IdentityPoolId:
      Ref: CognitoIdentityPool
    Roles:
      authenticated:
        Fn::GetAtt: [CognitoAuthRole, Arn]
        
# IAM role used for authenticated users
CognitoAuthRole:
  Type: AWS::IAM::Role
  Properties:
    RoleName: ${self:custom.role.cognito.auth.name}
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: 'Allow'
          Principal:
            Federated: 'cognito-identity.amazonaws.com'
          Action:
            - 'sts:AssumeRoleWithWebIdentity'
          Condition:
            StringEquals:
              'cognito-identity.amazonaws.com:aud':
                Ref: CognitoIdentityPool
            'ForAnyValue:StringLike':
              'cognito-identity.amazonaws.com:amr': authenticated
    Policies:
      - PolicyName: 'CognitoAuthorizedPolicy'
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: 'Allow'
              Action:
                - 'mobileanalytics:PutEvents'
                - 'cognito-sync:*'
                - 'cognito-identity:*'
              Resource: '*'
            
            - Effect: "Allow"
              Action:
                - appsync:GraphQL              
              Resource:
                - '*'